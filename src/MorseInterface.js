class MorseInterface {
    constructor(maxLength) {
        this.letterBuffer = ["", "", "", "", "", "", ""];
        this.letters = {
            "a": [
                "      __       ",
                "     /  \\      ",
                "    /    \\     ",
                "   /' /\\  \\    ",
                "  //  __'  \\   ",
                " /   /  \\\\  \\  ",
                "(___/    \\___) "
            ],
            "b": [
                " _______  ",
                "|   _   \\ ",
                "(. |_)  :)",
                "|:     \\/ ",
                "(|  _  \\\\ ",
                "|: |_)  :)",
                "(_______/ "
            ],
            "c": [
                "  ______  ",
                " /  _   \\ ",
                "(: ( \\___)",
                "|   \\     ",
                "|    \\ _  ",
                "(:   _) \\ ",
                " \\_______)"
            ],
            "d": [
                " ________  ",
                "|        \\ ",
                "(.  ___  :)",
                "|: \\   ) ||",
                "(| (___\\ ||",
                "|:       :)",
                "(________/ "
            ],

            "e": [
                "  _______ ",
                " /       |",
                "(: ______)",
                " \\/    |  ",
                " // ___)_ ",
                "(:       |",
                " \\_______)"
            ],

            "f": [
                "  _______ ",
                " /       |",
                "(: ______)",
                " \\/    |  ",
                " // ___)  ",
                "(:  (     ",
                " \\__/     "
            ],

            "g": [
                "  _______  ",
                " /  _    | ",
                "(: ( \\___) ",
                " \\/ \\      ",
                " //  \\ ___ ",
                "(:   _(  _|",
                " \\_______) "
            ],

            "h": [
                "  __    __  ",
                " /  |  |  \\ ",
                "(:  (__)  :)",
                " \\/      \\/ ",
                " //  __  \\\\ ",
                "(:  (  )  :)",
                " \\__|  |__/ "
            ],

            "i": [
                "  __    ",
                " |  \\   ",
                " ||  |  ",
                " |:  |  ",
                " |.  |  ",
                " /\\  |\\ ",
                "(__\\_|_)"
            ],
            "j": [
                "       ___     ",
                "      |   |    ",
                "      ||  |    ",
                "      |:  |    ",
                "   ___|  /     ",
                "  /  :|_/ )    ",
                " (_______/     "
            ],
            "k": [
                "  __   ___     ",
                " |/ | /   )    ",
                " (: |/   /     ",
                " |    __/      ",
                " (// _  \\      ",
                " |: | \\  \\     ",
                " (__|  \\__)    "
            ],
            "l": [
                "  ___          ",
                " |   |         ",
                " ||  |         ",
                " |:  |         ",
                "  \\  |___      ",
                " ( \\_|:  \\     ",
                "  \\_______)    "
            ],
            "m": [
                "  ___      ___ ",
                " |   \\    /   |",
                "  \\   \\  //   |",
                "  /\\\\  \\/.    |",
                " |: \\.        |",
                " |.  \\    /:  |",
                " |___|\\__/|___|"
            ],
            "n": [
                "  _____  ___   ",
                " (\\    \\|   \\  ",
                " |.\\\\   \\    | ",
                " |: \\.   \\\\  | ",
                " |.  \\    \\. | ",
                " |    \\    \\ | ",
                "  \\___|\\____\\) "
            ],
            "o": [
                "     ______    ",
                "    /      \\   ",
                "   // ____  \\  ",
                "  /  /    ) :) ",
                " (: (____/ //  ",
                "  \\        /   ",
                "   \\ _____/    "
            ],
            "p": [
                "   _______     ",
                "   |   __  \\   ",
                "   (. |__) :)  ",
                "   |:  ____/   ",
                "   (|  /       ",
                "  /|__/ \\      ",
                " (_______)     "
            ],
            "q": [
                "     ______    ",
                "    /      \\   ",
                "   // ____  \\  ",
                "  /  /    )  ) ",
                " (: (____/ //  ",
                "  \\         \\  ",
                "   \\ ____/\\__\\ "
            ],
            "r": [
                "   _______     ",
                "  /       \\    ",
                " |:        |   ",
                " |_____/   )   ",
                "  //      /    ",
                " |:  __   \\    ",
                " |__|  \\___)   "
            ],
            "s": [
                "  ________ ",
                " /        )",
                "(:   \\___/ ",
                " \\___  \\   ",
                "  __/  \\\\  ",
                " /  \\   :) ",
                "(_______/  "
            ],
            "t": [
                " ___________  ",
                "(      _    ) ",
                " )__/  \\\\__/  ",
                "    \\\\_ /     ",
                "    |.  |     ",
                "    \\:  |     ",
                "     \\__|     "
            ],
            "u": [
                " ____  ____   ",
                "(   _||_   |  ",
                "|   (  ) : |  ",
                "(:  |  | . )  ",
                " \\\\ \\__/ //   ",
                " /\\\\ __ //\\   ",
                "(__________)  "
            ],
            "v": [
                " ___      ___ ",
                "|   \\    /   |",
                " \\   \\  //  / ",
                "  \\\\  \\/. ./  ",
                "   \\.    //   ",
                "    \\\\   /    ",
                "     \\__/     "
            ],
            "w": [
                " __   __  ___ ",
                "|   |/  \\|   |",
                "|'  /    \\:  |",
                "|: /'        |",
                " \\//  /\\'    |",
                " /   /  \\\\   |",
                "|___/    \\___|"
            ],
            "x": [
                " ___  ___ ",
                "|   \\/   |",
                " \\   \\  / ",
                "  \\\\  \\/  ",
                "  /\\.  \\  ",
                " /  \\   \\ ",
                "|___/\\___|"
            ],
            "y": [
                " ___  ___ ",
                "|   \\/   |",
                " \\   \\  / ",
                "  \\\\  \\/  ",
                "  /   /   ",
                " /   /    ",
                "|___/     "
            ],
            "z": [
                " ________  ",
                "(        \\ ",
                " \\___/   :)",
                "   /  ___/ ",
                "  //  \\__  ",
                " (:   /  \\ ",
                "  \\_______)"
            ]
        }
        this.maxLength = maxLength;
        this.morsePoint = [
            " ooo ",
            "ooooo",
            " ooo "
        ];
        this.morseTrait = [
            "============",
            "============",
            "============"
        ];
        this.morseTrack = ["", "", ""];
    }
    letterBufferLength() {
        return this.letterBuffer[0].length;
    }
    emptyLetterBuffer() {
        this.letterBuffer = ["", "", "", "", "", "", ""];
    }
    addLetterToMorse(letter) {
        if (Object.keys(this.letters).includes(letter)) {
            for (let i = 0; i < this.letterBuffer.length; i++) {
                this.letterBuffer[i] += this.letters[letter][i];
            }
        }

        while (this.letterBuffer[0].length + 63 > this.maxLength) {
            for (let i = 0; i < this.letterBuffer.length; i++) {
                let str = this.letterBuffer[i].split('');
                str.splice(0, 1)
                this.letterBuffer[i] = str.join('');
            }
        }
    }
    addMorsePart(char) {
        if (char === ".") {
            this.morseTrack[0] += this.morsePoint[0] + "   ";
            this.morseTrack[1] += this.morsePoint[1] + "   ";
            this.morseTrack[2] += this.morsePoint[2] + "   ";
        } else if (char === "_") {
            this.morseTrack[0] += this.morseTrait[0] + "   ";
            this.morseTrack[1] += this.morseTrait[1] + "   ";
            this.morseTrack[2] += this.morseTrait[2] + "   ";
        } else if (char === " ") {
            this.morseTrack[0] += "   ";
            this.morseTrack[1] += "   ";
            this.morseTrack[2] += "   ";
        }
        while (this.morseTrack[0].length > this.maxLength) {
            for (let i = 0; i < 3; i++) {
                let str = this.morseTrack[i].split('');
                str.splice(0, 1)
                this.morseTrack[i] = str.join('');
            }
        }
    }
}
module.exports = MorseInterface